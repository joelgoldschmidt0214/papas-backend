# GitHub Actions Workflow: Deploy Backend to Azure Container Apps

name: Deploy Backend to Azure Container Apps

on:
  # mainブランチにコードがプッシュされたときに、このワークフローをトリガーする
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    # ワークフローは最新のUbuntu環境で実行される
    runs-on: ubuntu-latest

    steps:
      # ステップ 1: ソースコードをチェックアウト
      # これにより、ワークフローはリポジトリのコードにアクセスできる
      - name: Checkout source code
        uses: actions/checkout@v3

      # ステップ 2: Azure CLIにログイン
      # AZURE_CREDENTIALSシークレットを使い、サービスプリンシパル経由でAzureに認証
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # ステップ 3: Azure Container Registry (ACR) にログイン
      # このステップにより、後のdocker pushコマンドがACRに対して認証される
      # 注: azure/login@v1で認証後、このアクションは通常追加の認証情報なしで動作しますが、
      # 明示的にサービスプリンシパルを指定することで、より確実な認証が可能です。
      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v2
        with:
          login-server: ${{ secrets.ACR_NAME }}.azurecr.io
          username: ${{ secrets.AZURE_CLIENT_ID }}
          password: ${{ secrets.AZURE_CLIENT_SECRET }}

      # ステップ 4: DockerイメージをビルドしてACRにプッシュ
      # gitのコミットSHAをタグに使い、各デプロイを一意に識別し、追跡可能にする
      - name: Build and push Docker image to ACR
        run: |
          docker build . -f Dockerfile -t ${{ secrets.ACR_NAME }}.azurecr.io/${{ secrets.ACA_APP_NAME }}:${{ github.sha }}
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/${{ secrets.ACA_APP_NAME }}:${{ github.sha }}

      # ステップ 5: Azure Container Appのシークレットを更新
      # GitHub Secretsから値を取得し、Azureのシークレットストアに安全に設定する
      # これにより、YAMLファイルやソースコードに秘密情報を記述する必要がなくなる
      - name: Update Azure Container App secrets
        run: |
          az containerapp secret set \
            --name ${{ secrets.ACA_APP_NAME }} \
            --resource-group ${{ secrets.RESOURCE_GROUP_NAME }} \
            --secrets \
              db-user="${{ secrets.DB_USER }}" \
              db-password="${{ secrets.DB_PASSWORD }}" \
              db-host="${{ secrets.DB_HOST }}" \
              db-name="${{ secrets.DB_NAME }}" \
              db-port="${{ secrets.DB_PORT }}" \
              ssl-ca-path="${{ secrets.SSL_CA_PATH }}" \
              session-secret-key="${{ secrets.SESSION_SECRET_KEY }}"

      # ステップ 6: Azure Container Appsにデプロイ
      # azure-container-app.yamlをインフラの設計図としてデプロイを実行
      - name: Deploy to Azure Container Apps
        uses: azure/container-apps-deploy-action@v1
        with:
          resourceGroup: ${{ secrets.RESOURCE_GROUP_NAME }}
          # インフラ定義の唯一の正しい情報源としてYAMLファイルを参照
          yamlConfigPath: azure-container-app.yaml
          # YAMLファイル内のイメージ名を、ステップ4でビルドした最新のイメージに上書き
          imageToDeploy: ${{ secrets.ACR_NAME }}.azurecr.io/${{ secrets.ACA_APP_NAME }}:${{ github.sha }}
